BOOTBRANCH='tag:v2020.04'
BOOTPATCHDIR='u-boot-arm-64'
BOOTDIR='u-boot'
UBOOT_USE_GCC='< 8.0'
OFFSET=16
BOOTSIZE=512
BOOTFS_TYPE=fat
SERIALCON=ttyS2

FIXED_IMAGE_SIZE=5000

UBOOT_TARGET_MAP="u-boot-dtb.bin;;idbloader.bin uboot.img"


GOVERNOR="ondemand"
CPUMIN="600000"
CPUMAX="1900000"

ARCH=armhf

SCR_ENV='uEnv.txt'
SCR_BOOT_MAINLINE='boot-arm-32.cmd'

case $BRANCH in
	legacy)
	KERNELDIR='linux-arm-32-legacy'
	KERNELSOURCE='https://github.com/150balbes/rockchip-kernel'
	KERNELBRANCH='branch:5.4'
	;;

	current)
	KERNELDIR='linux-arm-32-current'
	KERNELSOURCE='https://github.com/150balbes/rockchip-kernel'
	KERNELBRANCH='branch:master-32'
	;;

	dev)
	KERNELDIR='linux-arm-32-dev'
	KERNELSOURCE='git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git'
	KERNELBRANCH='branch:master'
	WIREGUARD="no"
	EXTRAWIFI="no"
	AUFS="no"
	;;
esac

if [[ $ADD_UBOOT == yes ]]; then

    write_uboot_platform()
    {
	dd if=$1/idbloader.bin of=$2 seek=64 conv=notrunc status=none >/dev/null 2>&1
	dd if=$1/uboot.img of=$2 seek=16384 conv=notrunc status=none >/dev/null 2>&1
    }

    uboot_custom_postprocess()
    {
		if [ "$(uname -m)" = "aarch64" ]; then
			if [ "$(lsb_release -sc)" = "focal" ]; then
				PKG_PREFIX="qemu-x86_64-static "
			else
				PKG_PREFIX="qemu-x86_64 "
			fi
		else
			PKG_PREFIX=""
		fi

		RKBIN_DIR="$SRC/cache/sources/rkbin-tools"
		BOOT_USE_BLOBS=yes
		BOOT_SOC=rk3288

		DDR_BLOB=$SRC/$BOARD_DIR/rk3288_ddr_400MHz_v1.08.bin
		MINILOADER_BLOB=$SRC/$BOARD_DIR/rk3288_miniloader_v2.58.bin

		local tempfile=$(mktemp)

		mkimage -n $BOOT_SOC -T rksd -d $DDR_BLOB idbloader.bin
		cat $MINILOADER_BLOB >> idbloader.bin

		$PKG_PREFIX$RKBIN_DIR/tools/loaderimage --pack --uboot ./u-boot-dtb.bin uboot.img 0x0

    }

fi

family_tweaks()
{
	echo 'DAEMON_ARGS="-w 1024 --data=16"' > $SDCARD/etc/default/haveged

	cp $SRC/packages/bsp/mpv/mpv_mainline.conf $SDCARD/etc/mpv/mpv.conf

	cp $SRC/$BOARD_DIR/$SCR_ENV $SDCARD/boot/uEnv.txt

	install -m 755 $SRC/$BOARD_DIR/ddbr_backup_nand $SDCARD/usr/bin/
	install -m 755 $SRC/$BOARD_DIR/ddbr_backup_nand_full $SDCARD/usr/bin/
	install -m 755 $SRC/$BOARD_DIR/ddbr_restore_nand $SDCARD/usr/bin/
	install -m 755 $SRC/$BOARD_DIR/ddbr $SDCARD/usr/bin/

	cp $SRC/config/bootscripts/$SCR_BOOT_MAINLINE $SDCARD/boot/boot.cmd
	mkimage -C none -A arm -T script -d $SDCARD/boot/boot.cmd $SDCARD/boot/boot.scr

	install -m 755 $SRC/$BOARD_DIR/sound.sh $SDCARD/usr/bin/sound.sh

	echo 'Section "Device"
    Identifier  "Default Device"
    Driver      "modesetting"
    Option      "AccelMethod"    "none"     ### "glamor" to enable 3D acceleration, "none" to disable.
EndSection
Section "ServerFlags"
        Option  "AutoAddGPU" "off"
        Option "Debug" "dmabuf_capable"
EndSection
Section "OutputClass"
        Identifier "Panfrost"
        MatchDriver "meson"
        Driver "modesetting"
        Option "PrimaryGPU" "true"
EndSection' >> $SDCARD/etc/X11/xorg.conf.d/01-armbian-defaults.conf

}
